package abd.p1.view;

import abd.p1.controller.MainController;
import abd.p1.misc.UpdateMessage;
import abd.p1.misc.Watchable;
import abd.p1.misc.Watcher;
import abd.p1.view.res.HintPassField;
import abd.p1.view.res.HintTextField;

import javax.swing.*;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class LoginFrame extends javax.swing.JFrame implements Watcher {

    private MainController controller;

    private java.awt.Button buttonAccept;
    private java.awt.Button buttonNewUser;
    private HintTextField textFieldMail;
    private HintPassField textFieldPassword;


    public LoginFrame(MainController _controller) {
        this.controller = _controller;
        initUI();
    }

    public void init() {
        this.controller.init(this);
        this.setEnabled(true);
        this.setVisible(true);
    }

    private void initUI() {
        initComponents();

        textFieldMail.addActionListener(submitFields("login"));
        textFieldPassword.addActionListener(submitFields("login"));

        buttonAccept.addActionListener(submitFields("login"));
        buttonNewUser.addActionListener(submitFields("signup"));

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                controller.shutdown();
                e.getWindow().dispose();
            }
        });
    }

    public void showValidateError() {
        JOptionPane.showMessageDialog(this, "Email y / o contraseña incorrectos");
    }

    public void showUserExistsError() {
        JOptionPane.showMessageDialog(this, "El correo introducido ya existe");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        java.awt.Label labelMail = new java.awt.Label();
        java.awt.Label labelPassword = new java.awt.Label();
        textFieldMail = new HintTextField("email");
        textFieldPassword = new HintPassField("Password");
        buttonAccept = new java.awt.Button();
        buttonNewUser = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelMail.setText("Dirección de correo:");

        labelPassword.setText("Contraseña:");

        buttonAccept.setLabel("Aceptar");

        buttonNewUser.setLabel("Nuevo Usuario");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelMail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textFieldMail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textFieldPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(buttonAccept, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(buttonNewUser, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 151, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textFieldMail, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(labelMail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(textFieldPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonAccept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonNewUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>

    private ActionListener submitFields(String action) {
        return e -> {
            String email = textFieldMail.getText();
            char[] bytes = textFieldPassword.getPassword();

            if (email.isEmpty() || bytes == null) {
                JOptionPane.showMessageDialog(this, "Por favor completa los campos");
            } else {
                // Java please support void method references
                String pass = String.valueOf(bytes);
                switch (action) {
                    case "login": controller.loginEvent(email, pass); break;
                    case "signup": controller.signupEvent(email, pass); break;
                }

                textFieldMail.setText(null);
                textFieldPassword.setText(null);
            }
        };
    }

    @Override
    public void update(Watchable w, UpdateMessage arg) {
        switch (arg.getEvent()) {
            case SIGNUP:
                UserProfileEdit newUserDialog = new UserProfileEdit(this, true);
                newUserDialog.setLocationRelativeTo(null);
                newUserDialog.setVisible(true);
                break;
        }
    }
}
